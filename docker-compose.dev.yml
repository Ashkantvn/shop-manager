services:
  django:
    build: .
    command: daphne -b 0.0.0.0 -p 8000 core.asgi:application
    volumes:
      - ./core/:/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    working_dir: /app

  postgres:
    image: postgres:16
    restart: unless-stopped
    container_name: postgres
    env_file:
      - ./.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:7.4
    restart: unless-stopped
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: celery_worker
    command: celery -A core worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
      django:
        condition: service_started
    env_file:
      - ./.env
    working_dir: /app


  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: unless-stopped
    container_name: smtp4dev
    ports:
      - "5000:80"
      - "25:25"
      - "143:143"
    volumes:
      - smtp4dev-data:/smtp4dev
    env_file:
      - ./.env

volumes:
  smtp4dev-data:
  postgres-data:
